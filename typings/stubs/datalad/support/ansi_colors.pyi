"""
This type stub file was generated by pyright.
"""

from typing import Optional

"""Definitions for ansi colors etc"""
BOLD = ...
UNDERLINE = ...
RESET_SEQ = ...
COLOR_SEQ = ...
BOLD_SEQ = ...
LOG_LEVEL_COLORS = ...
RESULT_STATUS_COLORS = ...
DATASET = ...
FIELD = ...
def color_enabled() -> bool:
    """Check for whether color output is enabled

    If the configuration value ``datalad.ui.color`` is ``'on'`` or ``'off'``,
    that takes precedence.
    If ``datalad.ui.color`` is ``'auto'``, and the environment variable
    ``NO_COLOR`` is defined (see https://no-color.org), then color is disabled.
    Otherwise, enable colors if a TTY is detected by ``datalad.ui.ui.is_interactive``.

    Returns
    -------
    bool
    """
    ...

def format_msg(fmt: str, use_color: bool = ...) -> str:
    """Replace $RESET and $BOLD with corresponding ANSI entries"""
    ...

def color_word(s: str, color: Optional[int], force: bool = ...) -> str:
    """Color `s` with `color`.

    Parameters
    ----------
    s : string
    color : int
        Code for color. If the value evaluates to false, the string will not be
        colored.
    force : boolean, optional
        Color string even when non-interactive session is detected.

    Returns
    -------
    str
    """
    ...

def color_status(status: str) -> str:
    ...

