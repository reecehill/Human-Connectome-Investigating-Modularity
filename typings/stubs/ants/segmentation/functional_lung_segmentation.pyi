"""
This type stub file was generated by pyright.
"""

__all__ = ['functional_lung_segmentation']
def functional_lung_segmentation(image, mask=..., number_of_iterations=..., number_of_atropos_iterations=..., mrf_parameters=..., number_of_clusters=..., cluster_centers=..., bias_correction=..., verbose=...): # -> dict[str, Any]:
    """
    Ventilation-based segmentation of hyperpolarized gas lung MRI.

    Lung segmentation into classes based on ventilation as described in
    this paper:

         https://pubmed.ncbi.nlm.nih.gov/21837781/

    Arguments
    ---------
    image : ANTs image
        Input proton-weighted MRI.

    mask : ANTs image
        Mask image designating the region to segment.  0/1 = background/foreground.

    number_of_iterations : integer
        Number of Atropos <--> bias correction iterations (outer loop).

    number_of_atropos_iterations : integer
        Number of Atropos iterations (inner loop).  If number_of_atropos_iterations = 0,
        this is equivalent to K-means with no MRF priors.

    mrf_parameters : string
        Parameters for MRF in Atropos.

    number_of_clusters : integer
        Number of tissue classes.

    cluster_centers: array or tuple
        Initialization centers for k-means.

    bias_correction: string
        Apply "n3", "n4", or no bias correction (default = "n4").

    verbose : boolean
        Print progress to the screen.

    Returns
    -------
    Dictionary with segmentation image, probability images, and
    processed image.

    Example
    -------
    >>> import ants
    >>> image = ants.image_read(ants.get_data("mni")).resample_image((4,4,4))
    >>> mask = image.get_mask()
    >>> seg = ants.functional_lung_segmentation(image, mask, verbose=True,
                                                number_of_iterations=1,
                                                number_of_clusters=2,
                                                number_of_atropos_iterations=1)
    """
    ...

