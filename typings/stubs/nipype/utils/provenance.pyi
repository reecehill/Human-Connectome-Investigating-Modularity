"""
This type stub file was generated by pyright.
"""

logger = ...
foaf = ...
dcterms = ...
nipype_ns = ...
niiri = ...
crypto = ...
get_id = ...
PROV_ENVVARS = ...
def get_attr_id(attr, skip=...): # -> QualifiedName:
    ...

max_text_len = ...
def get_hashval(inputdict, skip=...): # -> tuple[dict[Unknown, Unknown], str]:
    """Return a dictionary of our items with hashes for each file.

    Searches through dictionary items and if an item is a file, it
    calculates the md5 hash of the file contents and stores the
    file name and hash value as the new key value.

    However, the overall bunch hash is calculated only on the hash
    value of a file. The path and name of the file are not used in
    the overall hash calculation.

    Returns
    -------
    dict_withhash : dict
        Copy of our dictionary with the new file hashes included
        with each file.
    hashvalue : str
        The md5 hash value of the traited spec

    """
    ...

def safe_encode(x, as_literal=...):
    """
    Encodes a python value for prov
    """
    ...

def prov_encode(graph, value, create_container=...):
    ...

def write_provenance(results, filename=..., format=...): # -> ProvDocument | None:
    ...

class ProvStore:
    def __init__(self) -> None:
        ...
    
    def add_results(self, results, keep_provenance=...): # -> ProvDocument:
        ...
    
    def write_provenance(self, filename=..., format=...): # -> ProvDocument:
        ...
    


