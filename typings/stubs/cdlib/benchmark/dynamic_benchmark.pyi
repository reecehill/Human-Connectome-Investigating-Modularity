"""
This type stub file was generated by pyright.
"""

import dynetx as dn

__all__ = ["RDyn"]
def RDyn(size: int = ..., iterations: int = ..., avg_deg: int = ..., sigma: float = ..., lambdad: float = ..., alpha: float = ..., paction: float = ..., prenewal: float = ..., quality_threshold: float = ..., new_node: float = ..., del_node: float = ..., max_evts: int = ..., simplified: bool = ...) -> [dn.DynGraph, object]:
    """
    RDyn is a syntetic dynamic network generator with time-dependent ground-truth partitions having tunable quality (in terms of conductance).
    Communities' ids are aligned across time and a predefined number of merge/plit events are planted in between consecutive stable iterations.

    :param size: Number of nodes
    :param iterations: Number of stable iterations
    :param avg_deg: Average node degree. Int, default 15
    :param sigma: Percentage of node's edges within a community. Float, default .6
    :param lambdad: Community size distribution exponent. Float, default 1
    :param alpha:  Degree distribution exponent. Float, default 2.5
    :param paction: Probability of node action. Float, default 1
    :param prenewal: Probability of edge renewal. Float, default, .8
    :param quality_threshold: Conductance quality threshold for stable iteration. Float, default .5
    :param new_node: Probability of node appearance. Float, default 0
    :param del_node: Probability of node vanishing. Float, default 0
    :param max_evts: Max number of community events for stable iteration. Int, default 1
    :param simplified: Simplified execution. Boolean, default True. (NB: when True an approximation of the original process is executed - some network characteristics can deviate from the expected ones)

    :return: A dynetx DynGraph, the TemporalClustering object

    :Example:

    >>> from cdlib.benchmark import RDyn
    >>> G, coms = RDyn(n=300)

    :References:

    Rossetti, Giulio. "RDyn: graph benchmark handling community dynamics." Journal of Complex Networks 5.6 (2017): 893-912.

    .. note:: Reference implementation: https://github.com/GiulioRossetti/RDyn
    """
    ...

