function [...
    adj_local,...
    adj_remote_bin,...
    adj_remote_wei,...
    adj_remote_len,...
    lo_adj_wei,...
    adj_matrix,...
    lo_adj_cortical_wei,...
    hi_faceROI_all,...
    lo_faceROI_all,...
    hi_faceROI_cortical,...
    lo_faceROI_cortical...
    ]=getmatrices(pathToFile, downsample)

gcp;
display('step4: get finally connectivity matrices')
disp('loading labelSRF.mat')
load([pathToFile,'/labelSRF.mat'],...
    'lo_faceROIidL', 'lo_faceROIidR',...
    'hi_faceROIidL', 'hi_faceROIidR',...
        'lo_glpfaces', 'lo_grpfaces',...
        'hi_glpfaces', 'hi_grpfaces',...
        'lo_subCoor',...
        'hi_subCoor',...
        'lo_subROIid',...
        'hi_subROIid',...
        'filenames'...
                );

disp('loading edgeList.mat')
load([pathToFile,'/edgeList.mat'])
disp('loading trsfmTrk.mat');
load([pathToFile,'/trsfmTrk.mat']);

nsublen = size(hi_subCoor,1); % number of (co-ordinates of all sub-cortical regions)
nbFaces=size(hi_glpfaces,1)+size(hi_grpfaces,1)+nsublen; % number of triangles in left hemi, right hemi, and subcortical regions.


%% make local connection matrix
adj_local=sparse( ...
    double(edgeListLocal(:,1)), ...
    double(edgeListLocal(:,2)), ...
    ones(length(edgeListLocal(:,1)),1), ...
    nbFaces, ...
    nbFaces);

%% make binary connection matrix
disp('making adj_remote_bin')

adj_remote_bin=sparse(double(edgeListRemote(:,1)),double(edgeListRemote(:,2)),ones(length(edgeListRemote(:,1)),1),nbFaces,nbFaces);
adj_remote_bin=adj_remote_bin+adj_remote_bin';
adj_remote_bin(adj_remote_bin>0)=1;
%% make adj_remote_wei
disp('making adj_remote_wei')

adj_remote_wei=sparse(double(edgeListRemote(:,1)),double(edgeListRemote(:,2)),ones(length(edgeListRemote(:,1)),1),nbFaces,nbFaces);
adj_remote_wei=adj_remote_wei+adj_remote_wei';

%% make adj_matrix combining local and long rang connction matrix
adj_matrix = adj_remote_bin + adj_local;
adj_matrix(adj_matrix>0) = 1;


%% make adj_remote_len
disp('making adj_remote_len')
adj_remote_len=sparse(double(edgeListRemote(:,1)),double(edgeListRemote(:,2)),double(trk_len(edgeListRemote(:,5))),nbFaces,nbFaces);
adj_remote_len=adj_remote_len+adj_remote_len';
% adj_remote_bin(adj_remote_bin>0)=1;
[x,y,v]=find(adj_remote_len~=0);
lenx=length(x);
for i=1:lenx
adj_remote_len(x(i),y(i))=adj_remote_len(x(i),y(i))./adj_remote_wei(x(i),y(i));
end

hi_faceROI_all = [hi_faceROIidL(:,1); hi_faceROIidR(:,1); hi_subROIid+length(filenames)];
hi_faceROI_cortical = [hi_faceROIidL(:,1); hi_faceROIidR(:,1)];

%% make lo res matrix(68 corticals + 14 subcortical + rh/lh.cerebellum + brain-stem = 85)
disp('making lo_adj include all regions')
lo_adj_wei=zeros(85,85);
%highestLhLabelId = find(contains(filenames,'lh.'), 1, 'last' );
lo_faceROI_all=[lo_faceROIidL(:,1); lo_faceROIidR(:,1); lo_subROIid+length(filenames)];
ROIlen = max(lo_faceROI_all);

% Attempting to speed up making lo_adj_matrix
% sets = {unique(faceROI_all), unique(faceROI_all)};
% [i j] = ndgrid(sets{:});
% cartProd = [j(:) i(:)];
% for jloc=cartProd(:,1)
%     ilocs = cartProd(,2)
%     lo_adj_wei(i,j)=sum(sum(adj_remote_wei(ilocs,jlocs)));
% 

for i=1:ROIlen
    ilocs=find(faceROI_all==i);
    parfor j=1:ROIlen
        jlocs=find(faceROI_all==j);
        lo_adj_wei(i,j)=sum(sum(adj_remote_wei(ilocs,jlocs)));
    end 
end



disp('making lo_adj only include cortical regions')
lo_adj_cortical_wei=zeros(68,68);
lo_faceROI_cortical=[lo_faceROIidL(:,1); lo_faceROIidR(:,1)];
ROIlen = max(faceROI_cortical);
for i=1:ROIlen
    ilocs=find(faceROI_cortical==i);
    parfor j=1:ROIlen
        jlocs=find(faceROI_cortical==j);
        lo_adj_cortical_wei(i,j)=sum(sum(adj_remote_wei(ilocs,jlocs)));
    end 
end

end