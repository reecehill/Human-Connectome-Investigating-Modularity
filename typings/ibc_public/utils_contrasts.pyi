"""
This type stub file was generated by pyright.
"""

""" This modules specifies contrasts for the IBC tasks

Author: Bertrand Thirion, Ana Luisa Pinho 2014--2020
"""
def make_contrasts(paradigm_id, design_matrix_columns=...):
    """ return the contrasts matching a string"""
    ...

def mario(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Mario task """
    ...

def emotion(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for emotion task """
    ...

def multi_modal(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for multimodal task (Leuven protocol)"""
    ...

def abstraction_localizer(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Abstraction Localizer"""
    ...

def abstraction(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Abstraction """
    ...

def mdtb(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Multy Domain Task Battery """
    ...

def working_memory_aomic(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for WorkingMemory in AOMIC """
    ...

def stroop_aomic(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for StroopAomic """
    ...

def harriri_aomic(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for HarririAomic """
    ...

def faces_aomic(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown | Any]:
    """ Contrasts for color localizer """
    ...

def color(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for color localizer """
    ...

def optimism_bias(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown | Any]:
    """ Contrasts for optimism bias protocol """
    ...

def motion(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for motion localizer """
    ...

def search(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for search protocol"""
    ...

def breath_holding(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for breath holding protocol"""
    ...

def checkerboard(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for breath holding protocol"""
    ...

def fingertap(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for breath holding protocol"""
    ...

def item_recognition(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for breath holding protocol"""
    ...

def narps(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for reward processing experiment"""
    ...

def scenes(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """Contrasts for scenes protocol"""
    ...

def face_body(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for FaceBody task"""
    ...

def reward_processing(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for reward processing experiment"""
    ...

def math_language(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for math-language task"""
    ...

def spatial_navigation(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for spatial navigation task"""
    ...

def wedge(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for wedge stim"""
    ...

def ring(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for ring stim"""
    ...

def emotional_memory(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for emotional memory protocol"""
    ...

def emotion_recognition(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for emotion recognition protocol"""
    ...

def oddball(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for oddball protocol"""
    ...

def stop_nogo(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for stop nogo protocol"""
    ...

def finger_tapping(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for finger tapping protocol"""
    ...

def vstmc(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for vstmc protocol"""
    ...

def biological_motion1(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for biological motion 1 protocol"""
    ...

def biological_motion2(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for biological motion 1 protocol"""
    ...

def dot_patterns(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Stanford's dot patterns protocol"""
    ...

def columbia_cards(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Stanford's Columbia Cards protocol"""
    ...

def discount(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Stanford's discount protocol"""
    ...

def towertask(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Stanford's Tower task protocol"""
    ...

def two_by_two(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Stanford's two-by-two task protocol"""
    ...

def attention(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Stanford's attention protocol"""
    ...

def selective_stop_signal(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Stanford's selective_stop_signal protocol"""
    ...

def stop_signal(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """Contrasts for the Stanford stop signal protocol"""
    ...

def stroop(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """Contrasts for the stanford stroop protocol"""
    ...

def lyon_lec2(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """Contrasts for the lyon lec2 protocol"""
    ...

def lyon_audi(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """Contrasts for the lyon audi protocol"""
    ...

def lyon_visu(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """Contrasts for the lyon visu protocol"""
    ...

def lyon_lec1(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """Contrasts for the lec1 protocol"""
    ...

def audio(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """Contrasts for the audio protocol"""
    ...

def lyon_mveb(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Lyon mveb localizer"""
    ...

def lyon_mvis(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Lyon mvis localizer"""
    ...

def lyon_moto(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Lyon motor localizer"""
    ...

def lyon_mcse(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for Lyon MCSE localizer"""
    ...

def bang(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for bang experiment"""
    ...

def self_localizer(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for self experiment"""
    ...

def vstm(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Any]:
    """ contrasts for vstm task, Knops protocol"""
    ...

def enumeration(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Any]:
    """ contrasts for vstm task, Knops protocol"""
    ...

def pain_movie(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrast for pain task, TOM protocol"""
    ...

def emotional_pain(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrast for pain task, TOM protocol"""
    ...

def theory_of_mind(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrast for tom task, TOM protocol"""
    ...

def preferences(design_matrix_columns, domain): # -> dict[Unknown, list[Any]] | dict[Unknown, Unknown]:
    """Contrast for preference experiment"""
    ...

def mtt_we_relative(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """Contrast for MTT west-east task, relative setting"""
    ...

def mtt_sn_relative(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """Contrast for MTT south-north task, relative setting"""
    ...

def retino(design_matrix_columns): # -> dict[str, list[Unknown]] | dict[str, Unknown | NDArray[Unknown]]:
    """ Contrast for retino experiment """
    ...

def rsvp_language(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    """ Contrasts for RSVP language localizer"""
    ...

def archi_social(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    ...

def archi_spatial(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    ...

def archi_standard(design_matrix_columns, new=...): # -> dict[str, list[Any]] | dict[str, Unknown]:
    ...

def archi_emotional(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    ...

def hcp_emotion(design_matrix_columns=...): # -> dict[str, list[Any]] | dict[str, Unknown]:
    ...

def hcp_gambling(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    ...

def hcp_language(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    ...

def hcp_motor(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    ...

def hcp_relational(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    ...

def hcp_social(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    ...

def hcp_wm(design_matrix_columns): # -> dict[str, list[Any]] | dict[str, Unknown]:
    ...

