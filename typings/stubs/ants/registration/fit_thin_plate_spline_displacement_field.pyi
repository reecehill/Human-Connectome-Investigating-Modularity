"""
This type stub file was generated by pyright.
"""

__all__ = ["fit_thin_plate_spline_displacement_field"]
def fit_thin_plate_spline_displacement_field(displacement_origins=..., displacements=..., origin=..., spacing=..., size=..., direction=...):
    """
    Fit a thin-plate spline object to a a set of points with associated displacements.  
    This is basically a wrapper for the ITK filter

    https://itk.org/Doxygen/html/itkThinPlateSplineKernelTransform_8h.html

    ANTsR function: `fitThinPlateSplineToDisplacementField`

    Arguments
    ---------

    displacement_origins : 2-D numpy array
        Matrix (number_of_points x dimension) defining the origins of the input
        displacement points.  Default = None.

    displacements : 2-D numpy array
        Matrix (number_of_points x dimension) defining the displacements of the input
        displacement points.  Default = None.

    origin : n-D tuple
        Defines the physical origin of the B-spline object.

    spacing : n-D tuple
        Defines the physical spacing of the B-spline object.

    size : n-D tuple
       Defines the size (length) of the spline object.  Note that the length of the
       spline object in dimension d is defined as spacing[d] * size[d]-1.

    direction : 2-D numpy array
       Booleans defining whether or not the corresponding parametric dimension is
       closed (e.g., closed loop).  Default = None.

    Returns
    -------
    Returns an ANTsImage.

    Example
    -------
    >>> import ants
    >>> import numpy as np
    >>> points = np.array([[-50, -50]])
    >>> deltas = np.array([[10, 10]])
    >>> tps_field = ants.fit_thin_plate_spline_displacement_field(
    >>>   displacement_origins=points, displacements=deltas,
    >>>   origin=[0.0, 0.0], spacing=[1.0, 1.0], size=[100, 100],
    >>>   direction=np.array([[-1, 0], [0, -1]]))
    """
    ...

