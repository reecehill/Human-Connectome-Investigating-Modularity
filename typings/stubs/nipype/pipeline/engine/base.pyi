"""
This type stub file was generated by pyright.
"""

"""Defines functionality for pipelined execution of interfaces."""
class EngineBase:
    """
    Defines common attributes and functions for workflows and nodes.

    Implements the more general view of a task.
    """
    def __init__(self, name=..., base_dir=...) -> None:
        """
        Initialize base parameters of a workflow or node.

        Parameters
        ----------
        name : string (mandatory)
            Name of this node. Name must be alphanumeric and not contain any
            special characters (e.g., '.', '@').
        base_dir : string
            base output directory (will be hashed before creations)
            default=None, which results in the use of mkdtemp

        """
        ...
    
    @property
    def name(self): # -> None:
        """Set the unique name of this workflow element."""
        ...
    
    @name.setter
    def name(self, name): # -> None:
        ...
    
    @property
    def fullname(self): # -> str | None:
        """Build the full name down the hierarchy."""
        ...
    
    @property
    def inputs(self):
        ...
    
    @property
    def outputs(self):
        ...
    
    @property
    def itername(self): # -> str | None:
        """Get the name of the expanded iterable."""
        ...
    
    def clone(self, name): # -> Self@EngineBase:
        """
        Clone an EngineBase object.

        Parameters
        ----------

        name : string (mandatory)
            A clone of node or workflow must have a new name

        """
        ...
    
    def __str__(self) -> str:
        """Convert to string."""
        ...
    
    def __repr__(self): # -> str | None:
        """Get Python representation."""
        ...
    
    def save(self, filename=...): # -> None:
        """Store this workflow element to a file."""
        ...
    
    @staticmethod
    def load(filename): # -> Any:
        """Load this workflow element from a file."""
        ...
    


