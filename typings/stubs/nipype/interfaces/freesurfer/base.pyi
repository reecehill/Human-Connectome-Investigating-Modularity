"""
This type stub file was generated by pyright.
"""

import os
from ..base import CommandLine, CommandLineInputSpec, PackageInfo, TraitedSpec

"""The freesurfer module provides basic functions for interfacing with
freesurfer tools.

Currently these tools are supported:

     * Dicom2Nifti: using mri_convert
     * Resample: using mri_convert

Examples
--------
See the docstrings for the individual classes for 'working' examples.

"""
__docformat__ = ...
class Info(PackageInfo):
    """Freesurfer subject directory and version information.

    Examples
    --------

    >>> from nipype.interfaces.freesurfer import Info
    >>> Info.version()  # doctest: +SKIP
    >>> Info.subjectsdir()  # doctest: +SKIP

    """
    if os.getenv("FREESURFER_HOME"):
        version_file = ...
    @staticmethod
    def parse_version(raw_info):
        ...
    
    @classmethod
    def looseversion(cls): # -> LooseVersion:
        """Return a comparable version object

        If no version found, use LooseVersion('0.0.0')
        """
        ...
    
    @classmethod
    def subjectsdir(cls): # -> str | None:
        """Check the global SUBJECTS_DIR

        Parameters
        ----------

        subjects_dir :  string
            The system defined subjects directory

        Returns
        -------

        subject_dir : string
            Represents the current environment setting of SUBJECTS_DIR

        """
        ...
    


class FSTraitedSpec(CommandLineInputSpec):
    subjects_dir = ...


class FSCommand(CommandLine):
    """General support for FreeSurfer commands.

    Every FS command accepts 'subjects_dir' input.
    """
    input_spec = FSTraitedSpec
    _subjects_dir = ...
    def __init__(self, **inputs) -> None:
        ...
    
    @classmethod
    def set_default_subjects_dir(cls, subjects_dir): # -> None:
        ...
    
    def run(self, **inputs): # -> InterfaceResult:
        ...
    
    @property
    def version(self): # -> str | None:
        ...
    


class FSSurfaceCommand(FSCommand):
    """Support for FreeSurfer surface-related functions.
    For some functions, if the output file is not specified starting with 'lh.'
    or 'rh.', FreeSurfer prepends the prefix from the input file to the output
    filename. Output out_file must be adjusted to accommodate this. By
    including the full path in the filename, we can also avoid this behavior.
    """
    ...


class FSScriptCommand(FSCommand):
    """Support for Freesurfer script commands with log terminal_output"""
    _terminal_output = ...
    _always_run = ...


class FSScriptOutputSpec(TraitedSpec):
    log_file = ...


class FSTraitedSpecOpenMP(FSTraitedSpec):
    num_threads = ...


class FSCommandOpenMP(FSCommand):
    """Support for FS commands that utilize OpenMP

    Sets the environment variable 'OMP_NUM_THREADS' to the number
    of threads specified by the input num_threads.
    """
    input_spec = FSTraitedSpecOpenMP
    _num_threads = ...
    def __init__(self, **inputs) -> None:
        ...
    
    def run(self, **inputs): # -> InterfaceResult:
        ...
    


def no_freesurfer(): # -> bool:
    """Checks if FreeSurfer is NOT installed
    used with skipif to skip tests that will
    fail if FreeSurfer is not installed"""
    ...

