"""
This type stub file was generated by pyright.
"""

from ants.decorators import image_method

__all__ = ['morphology']
@image_method
def morphology(image, operation, radius, mtype=..., value=..., shape=..., radius_is_parametric=..., thickness=..., lines=..., include_center=...):
    """
    Apply morphological operations to an image

    ANTsR function: `morphology`

    Arguments
    ---------
    input : ANTsImage
        input image

    operation : string
        operation to apply
            "close" Morpholgical closing
            "dilate" Morpholgical dilation
            "erode" Morpholgical erosion
            "open" Morpholgical opening

    radius : scalar
        radius of structuring element

    mtype : string
        type of morphology
            "binary" Binary operation on a single value
            "grayscale" Grayscale operations

    value : scalar
        value to operation on (type='binary' only)

    shape : string
        shape of the structuring element ( type='binary' only )
            "ball" spherical structuring element
            "box" box shaped structuring element
            "cross" cross shaped structuring element
            "annulus" annulus shaped structuring element
            "polygon" polygon structuring element

    radius_is_parametric : boolean
        used parametric radius boolean (shape='ball' and shape='annulus' only)

    thickness : scalar
        thickness (shape='annulus' only)

    lines : integer
        number of lines in polygon (shape='polygon' only)

    include_center : boolean
        include center of annulus boolean (shape='annulus' only)

    Returns
    -------
    ANTsImage

    Example
    -------
    >>> import ants
    >>> fi = ants.image_read( ants.get_ants_data('r16') , 2 )
    >>> mask = ants.get_mask( fi )
    >>> dilated_ball = ants.morphology( mask, operation='dilate', radius=3, mtype='binary', shape='ball')
    >>> eroded_box = ants.morphology( mask, operation='erode', radius=3, mtype='binary', shape='box')
    >>> opened_annulus = ants.morphology( mask, operation='open', radius=5, mtype='binary', shape='annulus', thickness=2)
    """
    ...

