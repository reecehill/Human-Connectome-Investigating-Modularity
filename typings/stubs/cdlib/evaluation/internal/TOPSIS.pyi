"""
This type stub file was generated by pyright.
"""

def norm(x, y): # -> NDArray[Any]:
    """normalization function; x is the array with the
    performances and y is the normalization method.
    For vector input 'v' and for linear 'l'
    """
    ...

def mul_w(r, t): # -> NDArray[Any]:
    """multiplication of each evaluation by the associate
    weight; r stands for the weights matrix and t for
    the normalized matrix resulting from norm()
    """
    ...

def zenith_nadir(x, y): # -> tuple[Any | NDArray[Any], Any | NDArray[Any]] | tuple[NDArray[float64], NDArray[float64]]:
    """zenith and nadir virtual action function; x is the
    weighted normalized decision matrix and y is the
    action used. For min/max input 'm' and for absolute
    input enter 'a'
    """
    ...

def distance(x, y, z): # -> tuple[Any, Any]:
    """calculate the distances to the ideal solution (di+)
    and the anti-ideal solution (di-); x is the result
    of mul_w() and y, z the results of zenith_nadir()
    """
    ...

def topsis(matrix, weight, norm_m, id_sol): # -> NDArray[Any]:
    """matrix is the initial decision matrix, weight is
    the weights matrix, norm_m is the normalization
    method, id_sol is the action used, and pl is 'y'
    for plotting the results or any other string for
    not
    """
    ...

