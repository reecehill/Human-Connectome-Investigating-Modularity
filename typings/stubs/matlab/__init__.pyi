"""
This type stub file was generated by pyright.
"""

import os
import platform
import sys
from pkgutil import extend_path
from matlabmultidimarrayforpython import ShapeError, SizeError, double, int16, int32, int64, int8, logical, single, uint16, uint32, uint64, uint8

"""
Array interface between Python and MATLAB

This package defines classes and exceptions that create and manage
multidimensional arrays in Python that are passed between Python and MATLAB.

Modules
-------
    * mcpyarray - type-specific multidimensional array classes for working
    with MATLAB, implemented in C++
"""
__path__ = ...
_package_folder = ...
class _MiniPathInitializer:
    PLATFORM_DICT = ...
    def __init__(self) -> None:
        ...
    
    def get_platform_info(self): # -> None:
        """Ask Python for the platform and architecture."""
        ...
    
    def get_extern_bin_from_path_element_ending_with_runtime_arch(self, dir_found): # -> str:
        ...
    
    def is_extern_bin_on_py_sys_path(self): # -> bool:
        ...
    
    def put_extern_bin_on_py_sys_path(self): # -> None:
        """ 
        Look through the system path for the first directory ending with "runtime/<arch>" or
        "bin/<arch>" (with/without trailing slash). Use this to construct a new path ending 
        with "extern/bin/<arch>".
        """
        ...
    


def get_python_version(): # -> str:
    ...

def get_arch_filename(): # -> str:
    ...

def get_dirs_from_arch_file_without_import(): # -> bool:
    ...

def subdir_exists(folder_name, subfolder_name): # -> bool:
    ...

_mpi = ...
if subdir_exists(_package_folder, 'engine'):
    success = ...
else:
    ...
