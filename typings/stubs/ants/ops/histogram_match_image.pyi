"""
This type stub file was generated by pyright.
"""

from ants.decorators import image_method

__all__ = ['histogram_match_image', 'histogram_match_image2']
@image_method
def histogram_match_image(source_image, reference_image, number_of_histogram_bins=..., number_of_match_points=..., use_threshold_at_mean_intensity=...):
    """
    Histogram match source image to reference image.

    Arguments
    ---------
    source_image : ANTsImage
        source image

    reference_image : ANTsImage
        reference image

    number_of_histogram_bins : integer
        number of bins for source and reference histograms

    number_of_match_points : integer
        number of points for histogram matching

    use_threshold_at_mean_intensity : boolean
        see ITK description.

    Example
    -------
    >>> import ants
    >>> src_img = ants.image_read(ants.get_data('r16'))
    >>> ref_img = ants.image_read(ants.get_data('r64'))
    >>> src_ref = ants.histogram_match_image(src_img, ref_img)
    """
    ...

@image_method
def histogram_match_image2(source_image, reference_image, source_mask=..., reference_mask=..., match_points=..., transform_domain_size=...): # -> ANTsImage:
    """
    Transform image intensities based on histogram mapping.

    Apply B-spline 1-D maps to an input image for intensity warping.

    Arguments
    ---------
    source_image : ANTsImage
        source image

    reference_image : ANTsImage
        reference image

    source_mask : ANTsImage
        source mask

    reference_mask : ANTsImage
        reference mask
                
    match_points : integer or tuple
        Parametric points at which the intensity transform displacements are 
        specified between [0, 1], i.e. quantiles.  Alternatively, a single number 
        can be given and the sequence is linearly spaced in [0, 1]. 

    transform_domain_size : integer
        Defines the sampling resolution of the B-spline warping.

    Returns
    -------
    ANTs image

    Example
    -------
    >>> import ants
    >>> src_img = ants.image_read(ants.get_data('r16'))
    >>> ref_img = ants.image_read(ants.get_data('r64'))
    >>> src_ref = ants.histogram_match_image2(src_img, ref_img)
    """
    ...

