"""
This type stub file was generated by pyright.
"""

from collections import namedtuple
from .. import h5

"""
    High-level interface for creating HDF5 virtual datasets
"""
class VDSmap(namedtuple('VDSmap', ('vspace', 'file_name', 'dset_name', 'src_space'))):
    '''Defines a region in a virtual dataset mapping to part of a source dataset
    '''
    ...


vds_support = ...
hdf5_version = ...
if hdf5_version >= h5.get_config().vds_min_hdf5_version:
    vds_support = ...
class VirtualSource:
    """Source definition for virtual data sets.

    Instantiate this class to represent an entire source dataset, and then
    slice it to indicate which regions should be used in the virtual dataset.

    path_or_dataset
        The path to a file, or an h5py dataset. If a dataset is given,
        no other parameters are allowed, as the relevant values are taken from
        the dataset instead.
    name
        The name of the source dataset within the file.
    shape
        A tuple giving the shape of the dataset.
    dtype
        Numpy dtype or string.
    maxshape
        The source dataset is resizable up to this shape. Use None for
        axes you want to be unlimited.
    """
    def __init__(self, path_or_dataset, name=..., shape=..., dtype=..., maxshape=...) -> None:
        ...
    
    @property
    def shape(self): # -> tuple[Any, ...]:
        ...
    
    def __getitem__(self, key): # -> Self:
        ...
    


class VirtualLayout:
    """Object for building a virtual dataset.

    Instantiate this class to define a virtual dataset, assign to slices of it
    (using VirtualSource objects), and then pass it to
    group.create_virtual_dataset() to add the virtual dataset to a file.

    This class does not allow access to the data; the virtual dataset must
    be created in a file before it can be used.

    shape
        A tuple giving the shape of the dataset.
    dtype
        Numpy dtype or string.
    maxshape
        The virtual dataset is resizable up to this shape. Use None for
        axes you want to be unlimited.
    filename
        The name of the destination file, if known in advance. Mappings from
        data in the same file will be stored with filename '.', allowing the
        file to be renamed later.
    """
    def __init__(self, shape, dtype, maxshape=..., filename=...) -> None:
        ...
    
    def __setitem__(self, key, source): # -> None:
        ...
    
    def make_dataset(self, parent, name, fillvalue=...):
        """ Return a new low-level dataset identifier for a virtual dataset """
        ...
    


