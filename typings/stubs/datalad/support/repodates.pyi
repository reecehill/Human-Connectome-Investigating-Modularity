"""
This type stub file was generated by pyright.
"""

"""Utilities for checking repository dates.
"""
lgr = ...
def branch_blobs(repo, branch): # -> Generator[tuple[Unknown, Unknown, Unknown], None, None]:
    """Get all blobs for `branch`.

    Parameters
    ----------
    repo : GitRepo
    branch : str

    Returns
    -------
    A generator object that returns (hexsha, content, file name) for each blob
    in `branch`.  Note: By design a blob isn't tied to a particular file name;
    the returned file name matches what is returned by 'git rev-list'.
    """
    ...

def branch_blobs_in_tree(repo, branch): # -> Generator[tuple[Unknown, Unknown | None, Unknown], None, None]:
    """Get all blobs for the current tree of `branch`.

    Parameters
    ----------
    repo : GitRepo
    branch : str, optional

    Returns
    -------
    A generator object that returns (hexsha, content, file name) for each blob.
    Note: If there are multiple files in the tree that point to the blob, only
    the first file name that is reported by 'git ls-tree' is used (i.e., one
    entry per blob is yielded).
    """
    ...

ANNEX_DATE_RE = ...
def search_annex_timestamps(text): # -> Generator[int, None, None]:
    """Extract unix timestamps content of the git-annex branch.

    Parameters
    ----------
    text : str
        Content from the git-annex branch (e.g., the content of the "uuid.log"
        file).

    Returns
    -------
    A generator object that returns a unix timestamp (without fractional any
    seconds) for each timestamp found in `text`.
    """
    ...

def annex_dates(repo, all_objects=...): # -> Generator[tuple[Unknown, Generator[int, None, None], Unknown], None, None]:
    """Get git-annex branch blobs containing dates.

    Parameters
    ----------
    repo : GitRepo
    all_objects : bool, optional
        Instead for searching the content of all blobs in the git-annex branch,
        search only the blobs that are in the tree of the tip of the git-annex
        branch.

    Returns
    -------
    A generator object that returns a tuple with the blob hexsha, a generator
    with the blob's timestamps, and an associated file name.
    """
    ...

def tag_dates(repo, pattern=...): # -> Generator[tuple[Unknown, int], None, None]:
    """Get timestamps for annotated tags.

    Parameters
    ----------
    repo : GitRepo
    pattern : str
        Limit the tags by this pattern. It will be appended to 'refs/tags'
        argument passed to `git for-each-ref`.

    Returns
    -------
    A generator object that returns a tuple with the tag hexsha and timestamp.
    """
    ...

def log_dates(repo, revs=...): # -> Generator[tuple[Unknown, int, int], None, None]:
    """Get log timestamps.

    Parameters
    ----------
    repo : GitRepo
    revs : list, optional
        Extract timestamps from commit objects that are reachable from these
        revisions.

    Returns
    -------
    A generator object that returns a tuple with the commit hexsha, author
    timestamp, and committer timestamp.
    """
    ...

def check_dates(repo, timestamp=..., which=..., revs=..., annex=..., tags=...): # -> dict[str, int | Unknown | str | dict[Unknown, Unknown]]:
    """Search for dates in `repo` that are newer than `timestamp`.

    This examines commit logs of local branches and the content of blobs in the
    git-annex branch.

    Parameters
    ----------
    repo : GitRepo or str
        If a str is passed, it is taken as the path to a GitRepo.
    timestamp : int, optional
        Unix timestamp.  It defaults to a day before now.
    which : {"newer", "older"}
        Whether to return timestamps that are newer or older than `timestamp`.
    revs : list, optional
        Search for commit timestamps in commits that are area reachable from
        these revisions. Any revision-specification allowed by `git log` can be
        used, including things like `--all`. Defaults to all local branches.
    annex : {True, "tree", False}, optional
        If True, search the content of all blobs in the git-annex branch.  If
        "tree", search only the blobs that are in the tree of the tip of the
        git-annex branch.  If False, do not search git-annex blobs.
    tags : bool, optional
        Whether to check dates the dates of annotated tags.

    Returns
    -------
    A dict that reports newer timestamps.
    """
    ...

