"""
This type stub file was generated by pyright.
"""

"""
Encapsulation of subject data. Handles subject data logic
like filetypes, extensions, .nii.gz -> .nii conversions, setup and
teardown for reports, etc., general sanitization, etc. Also handles
progressive report generation for subject during preprocessing.

"""
class SubjectData:
    """
    Encapsulation for subject data, relative to preprocessing.

    Parameters
    ----------
    func: can be one of the following types:
        ---------------------------------------------------------------
        Type                       | Explanation
        ---------------------------------------------------------------
        string                     | one session, 1 4D image filename
        ---------------------------------------------------------------
        list of strings            | one session, multiple 3D image
                                   | filenames (one per scan)
                                   | OR multiple sessions, multiple 4D
                                   | image filenames (one per session)
        ---------------------------------------------------------------
        list of list of strings    | multiple sessions, one list of
                                   | 3D image filenames (one per scan)
                                   | per session
        ---------------------------------------------------------------

    anat: string
        path to anatomical image

    subject_id: string, optional (default 'sub001')
        subject id

    session_ids: string or list of strings, optional (default None):
        session ids for all sessions (i.e runs)

    output_dir: string, optional (default None)
        output directory for this subject; will be create if doesn't exist

    session_output_dirs: list of strings, optional (default None):
        list of output directories, one for each session

    anat_output_dir: string, optional (default None)
        output directory of anatomical data

    scratch: string, optional (default None)
        root directory for scratch data (temp files, cache, etc.) for this
        subject; thus we can push all scratch data unto a dedicated device

    **kwargs: param-value dict_like
        additional optional parameters

    """
    def __init__(self, func=..., anat=..., subject_id=..., session_ids=..., output_dir=..., session_output_dirs=..., anat_output_dir=..., scratch=..., warpable=..., caching=..., **kwargs) -> None:
        ...
    
    def sanitize(self, deleteorient=..., niigz2nii=...): # -> Self@SubjectData:
        """
        This method does basic sanitization of the `SubjectData` instance, like
        extracting .nii.gz -> .nii (crucial for SPM), ensuring that functional
        images actually exist on disk, etc.

        Parameters
        ----------
        deleteorient: bool (optional)
            if true, then orientation meta-data in all input image files
            for this subject will be stripped-off

        niigz2nii: bool, optional (default False)
            convert func and ant .nii.gz images to .nii

        """
        ...
    
    def save_realignment_parameters(self, lkp=...): # -> list[Unknown] | None:
        ...
    
    def hardlink_output_files(self, final=...): # -> None:
        """
        Hard-links output files to subject's immediate output directory.

        Parameters
        ----------
        final: bool, optional (default False)
            flag indicating whether, we're finalizing the preprocessing
            pipeline

        """
        ...
    
    def __getitem__(self, key): # -> Any:
        ...
    
    def __repr__(self): # -> str:
        ...
    


