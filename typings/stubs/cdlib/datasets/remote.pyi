"""
This type stub file was generated by pyright.
"""

from cdlib.readwrite import *

__all__ = ["available_networks", "available_ground_truths", "fetch_network_data", "fetch_ground_truth_data", "fetch_network_ground_truth"]
__networks = ...
__ground_truths = ...
def available_networks() -> list:
    """
    List the remotely available network datasets.

    :return: list of network names

    :Example:

    >>> from cdlib import datasets
    >>> graph_name_list = datasets.available_networks()

    """
    ...

def available_ground_truths() -> list:
    """
    List the remotely available network ground truth datasets.

    :return: list of network names

    :Example:

    >>> from cdlib import datasets
    >>> graph_name_list = datasets.available_ground_truths()

    """
    ...

def fetch_network_data(net_name: str = ..., net_type: str = ...) -> object:
    """
    Load the required network from the remote repository

    :param net_name: network name
    :param net_type: desired graph object among "networkx" and "igraph". Default, igraph.
    :return: a graph object

    :Example:

    >>> from cdlib import datasets
    >>> G = datasets.fetch_network_data(net_name="karate_club", net_type="igraph")

    """
    ...

def fetch_ground_truth_data(net_name: str = ..., graph: object = ...) -> object:
    """
    Load the required ground truth clustering from the remote repository

    :param net_name: network name
    :param graph: the graph object associated to the ground truth (optional)
    :return: a NodeClustering object

    :Example:

    >>> from cdlib import datasets
    >>> gt_coms = datasets.fetch_network_data(fetch_ground_truth_data="karate_club")

    """
    ...

def fetch_network_ground_truth(net_name: str = ..., net_type: str = ...) -> [object, object]:
    """
    Load the required network, along with its ground truth partition, from the remote repository.

    :param net_name: network name
    :param net_type: desired graph object among "networkx" and "igraph". Default, igraph.
    :return: a tuple of (graph_object, NodeClustering)

    :Example:

    >>> from cdlib import datasets
    >>> G, gt_coms = datasets.fetch_network_ground_truth(fetch_ground_truth_data="karate_club", net_type="igraph")

    """
    ...

